  @Test
  public void testProxyingPackagePrivateMethods() {
    // Test relies on package access which CHILD loading doesn't have
    if (InternalFlags.getCustomClassLoadingOption() == CustomClassLoadingOption.CHILD) {
      return;
    }
    Injector injector = Guice.createInjector(interceptorModule);
    assertEquals("HI WORLD", injector.getInstance(PackageClassPackageMethod.class).sayHi());
    assertEquals("HI WORLD", injector.getInstance(PublicClassPackageMethod.class).sayHi());
    assertEquals("HI WORLD", injector.getInstance(ProtectedClassProtectedMethod.class).sayHi());
  }

