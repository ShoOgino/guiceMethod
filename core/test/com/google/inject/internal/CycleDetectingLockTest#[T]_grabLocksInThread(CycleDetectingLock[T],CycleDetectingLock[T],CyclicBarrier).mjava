  private static <T> Future<ListMultimap<Thread, T>> grabLocksInThread(
      final CycleDetectingLock<T> lock1,
      final CycleDetectingLock<T> lock2,
      final CyclicBarrier barrier) {
    FutureTask<ListMultimap<Thread, T>> future =
        new FutureTask<ListMultimap<Thread, T>>(
            () -> {
              assertTrue(lock1.lockOrDetectPotentialLocksCycle().isEmpty());
              barrier.await();
              ListMultimap<Thread, T> cycle = lock2.lockOrDetectPotentialLocksCycle();
              if (cycle == null) {
                lock2.unlock();
              }
              lock1.unlock();
              return cycle;
            });
    Thread thread = new Thread(future);
    thread.start();
    return future;
  }

