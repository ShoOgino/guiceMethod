  /** Our implementation maintains order, but doesn't guarantee it in the API spec. */
  // TODO: specify the iteration order
  public void testBindOrderEqualsIterationOrder() {
    Injector injector =
        Guice.createInjector(
            new AbstractModule() {
              @Override
              protected void configure() {
                MapBinder<String, String> mapBinder =
                    MapBinder.newMapBinder(binder(), String.class, String.class);
                mapBinder.addBinding("leonardo").toInstance("blue");
                mapBinder.addBinding("donatello").toInstance("purple");
                install(
                    new AbstractModule() {
                      @Override
                      protected void configure() {
                        MapBinder.newMapBinder(binder(), String.class, String.class)
                            .addBinding("michaelangelo")
                            .toInstance("orange");
                      }
                    });
              }
            },
            new AbstractModule() {
              @Override
              protected void configure() {
                MapBinder.newMapBinder(binder(), String.class, String.class)
                    .addBinding("raphael")
                    .toInstance("red");
              }
            });

    Map<String, String> map = injector.getInstance(new Key<Map<String, String>>() {});
    Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator();
    assertEquals(Maps.immutableEntry("leonardo", "blue"), iterator.next());
    assertEquals(Maps.immutableEntry("donatello", "purple"), iterator.next());
    assertEquals(Maps.immutableEntry("michaelangelo", "orange"), iterator.next());
    assertEquals(Maps.immutableEntry("raphael", "red"), iterator.next());
  }

