  /**
   * Injection of {@code Map<K, ? extends V>} wasn't added until 2020-07. It's possible that
   * applications already have a binding to that type. If they do, confirm that Guice fails fast
   * with a duplicate binding error.
   */
  public void testMapBinderConflictsWithExistingWildcard() {
    Module module =
        new AbstractModule() {
          @Override
          protected void configure() {
            MapBinder<Integer, String> mapBinder =
                MapBinder.newMapBinder(binder(), Integer.class, String.class);
            mapBinder.addBinding(1).toInstance("1");
            mapBinder.addBinding(2).toInstance("2");
          }

          @Provides
          protected Map<Integer, ? extends String> provideMap() {
            return ImmutableMap.of(1, "1", 2, "2");
          }
        };
    try {
      Guice.createInjector(module);
      fail();
    } catch (CreationException e) {
      assertTrue(
          e.getMessage()
              .contains(
                  "A binding to java.util.Map<java.lang.Integer, ? extends java.lang.String> was"
                      + " already configured"));
    }
  }

