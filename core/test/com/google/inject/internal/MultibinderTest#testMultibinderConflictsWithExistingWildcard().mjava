  /**
   * Injection of {@code Set<? extends T>} wasn't added until 2020-07. It's possible that
   * applications already have a binding to that type. If they do, confirm that Guice fails fast
   * with a duplicate binding error.
   */
  public void testMultibinderConflictsWithExistingWildcard() {
    Module module =
        new AbstractModule() {
          @Override
          protected void configure() {
            Multibinder<String> multibinder = Multibinder.newSetBinder(binder(), String.class);
            multibinder.addBinding().toInstance("a");
            multibinder.addBinding().toInstance("b");
            multibinder.addBinding().toInstance("c");
          }

          @Provides
          public Set<? extends String> provideStrings() {
            return ImmutableSet.of("d", "e", "f");
          }
        };

    try {
      Guice.createInjector(module);
      fail();
    } catch (CreationException e) {
      assertTrue(
          e.getMessage()
              .contains(
                  "A binding to java.util.Set<? extends java.lang.String> was already configured"));
    }
  }

