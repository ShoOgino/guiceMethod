  // This tests for a behavior where InstanceBindingImpl.getProvider() would return uninitialized
  // instances if called during injector creation (depending on the order of injection requests).
  public void testMultibinderDependsOnInstanceBindingWithInjectionPoints() {
    Guice.createInjector(
        new AbstractModule() {
      private Provider<Set<ObjectWithInjectionPoint>> provider;

      @Override protected void configure() {
        bind(Object.class).toInstance(this);  // force setter() to be injected first
        bind(String.class).toInstance("foo");
        this.provider = getProvider(new Key<Set<ObjectWithInjectionPoint>>() {});
        Multibinder.newSetBinder(binder(), ObjectWithInjectionPoint.class).addBinding()
            .toInstance(new ObjectWithInjectionPoint());
      }

      @Inject void setter(String s) {
        for (ObjectWithInjectionPoint item : provider.get()) {
          assertTrue(item.setterHasBeenCalled);
        }
      }
    });
  }

