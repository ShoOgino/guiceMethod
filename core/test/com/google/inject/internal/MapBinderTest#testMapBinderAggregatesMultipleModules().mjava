  public void testMapBinderAggregatesMultipleModules() {
    Module abc =
        new AbstractModule() {
          @Override
          protected void configure() {
            MapBinder<String, String> multibinder =
                MapBinder.newMapBinder(binder(), String.class, String.class);
            multibinder.addBinding("a").toInstance("A");
            multibinder.addBinding("b").toInstance("B");
            multibinder.addBinding("c").toInstance("C");
          }
        };
    Module de =
        new AbstractModule() {
          @Override
          protected void configure() {
            MapBinder<String, String> multibinder =
                MapBinder.newMapBinder(binder(), String.class, String.class);
            multibinder.addBinding("d").toInstance("D");
            multibinder.addBinding("e").toInstance("E");
          }
        };

    Injector injector = Guice.createInjector(abc, de);
    Map<String, String> abcde = injector.getInstance(Key.get(mapOfString));

    assertEquals(mapOf("a", "A", "b", "B", "c", "C", "d", "D", "e", "E"), abcde);
    assertMapVisitor(
        Key.get(mapOfString),
        stringType,
        stringType,
        setOf(abc, de),
        BOTH,
        false,
        0,
        instance("a", "A"),
        instance("b", "B"),
        instance("c", "C"),
        instance("d", "D"),
        instance("e", "E"));

    // just make sure these succeed
    injector.getInstance(Key.get(mapOfStringProvider));
    injector.getInstance(Key.get(mapOfStringJavaxProvider));
  }

