  /**
   * When custom providers are used at injector creation time, they should be injected before use.
   * In this testcase, we verify that a provider for List.class is injected before it is used.
   */
  public void testProvidersAreInjectedBeforeTheyAreUsed() {
    Injector injector =
        Guice.createInjector(
            new AbstractModule() {
              @Override
              public void configure() {
                // should bind String to "[true]"
                bind(String.class)
                    .toProvider(
                        new Provider<String>() {
                          private String value;

                          @Inject
                          void initialize(List list) {
                            value = list.toString();
                          }

                          @Override
                          public String get() {
                            return value;
                          }
                        });

                // should bind List to [true]
                bind(List.class)
                    .toProvider(
                        new Provider<List>() {
                          @Inject Boolean injectedYet = Boolean.FALSE;

                          @Override
                          public List get() {
                            return Arrays.asList(injectedYet);
                          }
                        });

                // should bind Boolean to true
                bind(Boolean.class).toInstance(Boolean.TRUE);
              }
            });

    assertEquals("Providers not injected before use", "[true]", injector.getInstance(String.class));
  }

