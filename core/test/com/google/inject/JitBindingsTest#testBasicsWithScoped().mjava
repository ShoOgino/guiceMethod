  public void testBasicsWithScoped() {
    Injector injector =
        Guice.createInjector(
            new AbstractModule() {
              @Override
              protected void configure() {
                binder().requireExplicitBindings();
                bind(Foo.class).to(ScopedFooImpl.class);
                bind(Bar.class);
                bind(FooBar.class);
              }
            });
    // Foo, Bar & FooBar was explicitly bound
    ensureWorks(injector, FooBar.class, Bar.class, Foo.class);
    // FooSingletonImpl was implicitly bound, it is an error to call getInstance or getProvider,
    // It is OK to call getBinding for introspection, but an error to get the provider
    // of the binding
    ensureFails(injector, ALLOW_BINDING, ScopedFooImpl.class);
  }

