  private void validateNullableWarns(Injector injector, Dependency<?> dependency) {
    final List<LogRecord> logRecords = Lists.newArrayList();
    final Handler fakeHandler = new Handler() {
      @Override
      public void publish(LogRecord logRecord) {
        logRecords.add(logRecord);
      }
      @Override
      public void flush() {}
      @Override
      public void close() throws SecurityException {}
    };
    Logger.getLogger(Guice.class.getName()).addHandler(fakeHandler);
    try {
      injector.getInstance(Integer.class); // no exception, but assert it does log.
      LogRecord record = Iterables.getOnlyElement(logRecords);
      assertEquals(
          "Guice injected null into parameter {0} of {1} (a {2}), please mark it @Nullable."
              + " Use -Dguice_check_nullable_provides_params=ERROR to turn this into an"
              + " error.",
          record.getMessage());
      assertEquals(dependency.getParameterIndex(), record.getParameters()[0]);
      assertEquals(Errors.convert(dependency.getInjectionPoint().getMember()),
          record.getParameters()[1]);
      assertEquals(Errors.convert(dependency.getKey()), record.getParameters()[2]);
    } finally {
      Logger.getLogger(Guice.class.getName()).removeHandler(fakeHandler);
    }
  }

