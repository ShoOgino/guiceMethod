  @Test
  public void childInjectorScannersDontImpactSiblings() {
    Module module =
        new AbstractModule() {

          @TestProvides
          @Named("foo")
          String foo() {
            return "foo";
          }
        };
    Injector parent = Guice.createInjector();
    Injector child = parent.createChildInjector(scannerModule(new NamedMunger()), module);
    assertMungedBinding(child, String.class, "foo", "foo");

    // no foo nor foo-munged in sibling, since scanner never saw it.
    Injector sibling = parent.createChildInjector(module);
    assertThat(sibling.getExistingBinding(Key.get(String.class, named("foo")))).isNull();
    assertThat(sibling.getExistingBinding(Key.get(String.class, named("foo-munged")))).isNull();
  }

