  /**
   * Invoked by Guice when an object requires provisioning. Provisioning occurs
   * when Guice locates and injects the dependencies for a binding. For types
   * bound to a Provider, provisioning encapsulates the {@link Provider#get}
   * method. For other types, provisioning encapsulates the construction of the
   * object. If a type is bound within a {@link Scope}, provisioning depends on
   * the scope. Types bound in Singleton scope will only be provisioned once.
   * Types bound in no scope will be provisioned every time they are injected.
   * Other scopes define their own behavior for provisioning.
   * <p>
   * To perform the provision, call {@link ProvisionInvocation#provision()}.
   * If you do not explicitly call provision, it will be automatically done after
   * this method returns.  It is an error to call provision more than once.
   */
  <T> void onProvision(ProvisionInvocation<T> provision);

