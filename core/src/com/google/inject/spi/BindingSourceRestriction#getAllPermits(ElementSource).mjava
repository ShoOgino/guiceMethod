  /**
   * Get all permits on the element source chain. Trusting only original (parent) element sources if
   * they are set by Modules.override.
   */
  private static ImmutableSet<Class<? extends Annotation>> getAllPermits(
      ElementSource elementSource) {
    ImmutableSet.Builder<Class<? extends Annotation>> permitsBuilder = ImmutableSet.builder();
    ImmutableSet<Class<? extends Annotation>> permits =
        elementSource.moduleSource.getPermitMap().getPermits(elementSource);
    // Only trust if the element comes from Modules.override because otherwise the original element
    // source can be spoofed.
    // TODO(b/156495326): Remove this special case once we resolve the spoofing issue.
    if (elementSource.getOriginalElementSource() == null
        || !elementSource
            .moduleSource
            .getModuleClassName()
            .equals("com.google.inject.util.Modules$OverrideModule")) {
      return permits;
    }
    permitsBuilder.addAll(permits);
    permitsBuilder.addAll(getAllPermits(elementSource.getOriginalElementSource()));
    return permitsBuilder.build();
  }

