  private void cleanupOnRemoval(RemovalNotification<State, Set<KeyAndSource>> notification) {
    Preconditions.checkState(RemovalCause.COLLECTED.equals(notification.getCause()));

    // There may be multiple child injectors blacklisting a certain key so only remove the source
    // that's relevant.
    synchronized (lock) {
      for (KeyAndSource keyAndSource : notification.getValue()) {
        Multiset<Object> set = backingMap.get(keyAndSource.key);
        if (set != null) {
          set.remove(keyAndSource.source);
          if (set.isEmpty()) {
            backingMap.remove(keyAndSource.key);
          }
        }
      }
    }
  }

