    T provision(
        Errors errors,
        Dependency<?> dependency,
        InternalContext context,
        ConstructionContext<T> constructionContext)
        throws ErrorsException {
      try {
        T t = providerMethod.doProvision(
            SingleParameterInjector.getAll(errors, context, parameterInjectors));
        errors.checkForNull(t, providerMethod.getMethod(), dependency);
        constructionContext.setProxyDelegates(t);
        return t;
      } catch (IllegalAccessException e) {
        throw new AssertionError(e);
      } catch (InvocationTargetException userException) {
        Throwable cause =
            userException.getCause() != null ? userException.getCause() : userException;
        throw errors
            .withSource(source)
            .errorInProvider(cause)
            .toException();
      }
    }

