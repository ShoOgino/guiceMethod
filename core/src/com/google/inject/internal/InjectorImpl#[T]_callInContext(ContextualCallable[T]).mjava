  /** Looks up thread local context. Creates (and removes) a new context if necessary. */
  <T> T callInContext(ContextualCallable<T> callable) throws ErrorsException {
    Object[] reference = localContext.get();
    if (reference == null) {
      reference = new Object[1];
      localContext.set(reference);
    }
    Thread currentThread = Thread.currentThread();
    if (reference[0] == null) {
      reference[0] = new InternalContext(options);
      globalInternalContext.put(currentThread, (InternalContext) reference[0]);
      try {
        return callable.call((InternalContext) reference[0]);
      } finally {
        // Only clear contexts if this call created them.
        reference[0] = null;
        globalInternalContext.remove(currentThread);
      }
    } else {
      Object previousGlobalInternalContext = globalInternalContext.get(currentThread);
      globalInternalContext.put(currentThread, (InternalContext) reference[0]);
      try {
        // Someone else will clean up this local context.
        return callable.call((InternalContext) reference[0]);
      } finally {
        if (previousGlobalInternalContext != null) {
          globalInternalContext.put(currentThread, (InternalContext) previousGlobalInternalContext);
        } else {
          globalInternalContext.remove(currentThread);
        }
      }
    }
  }

