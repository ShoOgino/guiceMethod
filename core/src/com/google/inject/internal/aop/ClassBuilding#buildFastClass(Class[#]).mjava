  /** Builds a 'fast-class' invoker that uses bytecode generation in place of reflection. */
  public static Function<String, BiFunction<Object, Object[], Object>> buildFastClass(
      Class<?> hostClass) {
    NavigableMap<String, Executable> glueMap = new TreeMap<>();

    visitFastConstructors(hostClass, ctor -> glueMap.put(signature(ctor), ctor));
    visitFastMethods(hostClass, method -> glueMap.put(signature(method), method));

    return new FastClass(hostClass).glue(glueMap);
  }

