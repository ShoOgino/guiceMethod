  @Override
  public void configure(Binder binder) {
    checkConfiguration(!bindingSelection.isInitialized(), "Multibinder was already initialized");
    binder
        .bind(bindingSelection.getSetKey())
        .toProvider(new RealMultibinderProvider<T>(bindingSelection));
    Provider<Collection<Provider<T>>> collectionOfProvidersProvider =
        new RealMultibinderCollectionOfProvidersProvider<T>(bindingSelection);
    binder
        .bind(bindingSelection.getCollectionOfProvidersKey())
        .toProvider(collectionOfProvidersProvider);

    // The collection this exposes is internally an ImmutableList, so it's OK to massage
    // the guice Provider to javax Provider in the value (since the guice Provider implements
    // javax Provider).
    @SuppressWarnings("unchecked")
    Provider<Collection<javax.inject.Provider<T>>> javaxProvider =
        (Provider) collectionOfProvidersProvider;
    binder.bind(bindingSelection.getCollectionOfJavaxProvidersKey()).toProvider(javaxProvider);
  }

