  static <T> BindingImpl<T> createBinding(
      InjectorImpl injector,
      Key<T> key,
      ProviderMethod<T> providerMethod,
      Object source,
      Scoping scoping) {
    Factory<T> factory = new Factory<T>(source, providerMethod);
    InternalFactory<? extends T> scopedFactory =
        Scoping.scope(key, injector, factory, source, scoping);
    return new ProviderMethodProviderInstanceBindingImpl<T>(
        injector, key, source, scopedFactory, scoping, providerMethod, factory);
  }

