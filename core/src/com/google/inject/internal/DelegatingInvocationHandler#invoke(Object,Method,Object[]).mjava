  public Object invoke(Object proxy, Method method, Object[] args)
      throws Throwable {
    if (delegate == null) {
      throw new IllegalStateException("This is a proxy used to support"
          + " circular references. The object we're"
          + " proxying is not constructed yet. Please wait until after"
          + " injection has completed to use this object.");
    }

    try {
      // TODO: method.setAccessible(true); ?
      // this would fix visibility errors when we proxy a
      // non-public interface.
      return method.invoke(delegate, args);
    } catch (IllegalAccessException e) {
      throw new RuntimeException(e);
    } catch (IllegalArgumentException e) {
      throw new RuntimeException(e);
    } catch (InvocationTargetException e) {
      throw e.getTargetException();
    }
  }

