  private MethodInvoker createMethodInvoker(final Method method) {
    if (InternalFlags.isBytecodeGenEnabled()) {
      try {
        BiFunction<Object, Object[], Object> fastMethod = BytecodeGen.fastMethod(method);
        if (fastMethod != null) {
          return new MethodInvoker() {
            @Override
            public Object invoke(Object target, Object... parameters)
                throws InvocationTargetException {
              try {
                return fastMethod.apply(target, parameters);
              } catch (Throwable e) {
                throw new InvocationTargetException(e); // match JDK reflection behaviour
              }
            }
          };
        }
      } catch (Exception | LinkageError e) {
        /* fall-through */
      }
    }

    int modifiers = method.getModifiers();
    if (!Modifier.isPublic(modifiers)
        || !Modifier.isPublic(method.getDeclaringClass().getModifiers())) {
      method.setAccessible(true);
    }

    return new MethodInvoker() {
      @Override
      public Object invoke(Object target, Object... parameters)
          throws IllegalAccessException, InvocationTargetException {
        return method.invoke(target, parameters);
      }
    };
  }

