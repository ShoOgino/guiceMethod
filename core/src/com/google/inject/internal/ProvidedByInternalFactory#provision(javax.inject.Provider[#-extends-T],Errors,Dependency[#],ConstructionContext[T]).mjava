  @Override
  protected T provision(javax.inject.Provider<? extends T> provider, Errors errors,
      Dependency<?> dependency, ConstructionContext<T> constructionContext)
      throws ErrorsException {
    try {
      Object o = super.provision(provider, errors, dependency, constructionContext);
      if (o != null && !rawType.isInstance(o)) {
        throw errors.subtypeNotProvided(providerType, rawType).toException();
      }
      @SuppressWarnings("unchecked") // protected by isInstance() check above
      T t = (T) o;
      return t;
    } catch (RuntimeException e) {
      throw errors.errorInProvider(e).toException();
    }
  }

