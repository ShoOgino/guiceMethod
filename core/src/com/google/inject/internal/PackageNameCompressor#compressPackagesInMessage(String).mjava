  /**
   * Compresses an error message by stripping the packages out of class names and adding them
   * to a legend at the bottom of the error.
   */
  static String compressPackagesInMessage(String input) {
    Matcher matcher = CLASSNAME_PATTERN.matcher(input);

    Set<String> names = new HashSet<>();
    // Find all classnames in the error. Note that if our regex isn't complete, it just means the
    // classname is left in the full form, which is a fine fallback.
    while (matcher.find()) {
      String name = matcher.group(1);
      names.add(name);
    }
    // Now dedupe any conflicts. Use a TreeMap since we're going to need the legend sorted anyway.
    // This map is from short name to full name.
    Map<String, String> replacementMap = shortenNames(names);

    // If we have nothing to replace, just return the original.
    if (replacementMap.isEmpty()) {
      return input;
    }

    StringBuilder output = new StringBuilder();
    Set<String> replacedShortNames = replaceFullNames(input, replacementMap, output);
    if (replacedShortNames.isEmpty()) {
      return input;
    }

    String classNameLegend =
        buildClassNameLegend(Maps.filterKeys(replacementMap, replacedShortNames::contains));
    return output.append(classNameLegend).toString();
  }

