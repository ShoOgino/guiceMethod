      @Override public Map<K, V> get() {
        // We can initialize the internal table efficiently this way and then swap the values
        // one by one.
        Map<K, Object> map = new LinkedHashMap<K, Object>(mapProvider.get());
        for (Entry<K, Object> entry : map.entrySet()) {
          @SuppressWarnings("unchecked")  // we initialized the entries with providers
          ValueProvider<V> provider = (ValueProvider<V>)entry.getValue();
          V value = provider.get();
          checkConfiguration(value != null,
              "Map injection failed due to null value for key \"%s\", bound at: %s",
              entry.getKey(),
              provider.getValueBinding().getSource());
          entry.setValue(value);
        }
        @SuppressWarnings("unchecked")  // if we exited the loop then we replaced all Providers
        Map<K, V> typedMap = (Map<K, V>) map;
        return Collections.unmodifiableMap(typedMap);
      }

