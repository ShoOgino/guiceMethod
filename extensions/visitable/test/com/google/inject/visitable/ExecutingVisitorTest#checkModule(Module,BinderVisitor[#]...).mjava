  protected void checkModule(Module module, BinderVisitor<?>... visitors) {
    // record the commands
    VisitableBinder original = new VisitableBinder(earlyRequestProvider);
    module.configure(original);

    // test executing visitor by executing the recorded commands on a second binder
    final VisitableBinder copy = new VisitableBinder(earlyRequestProvider);
    ExecutingVisitor copyingVisitor = new ExecutingVisitor() {
      public Binder binder() {
        return copy;
      }
    };
    for (Command command : original.getCommands()) {
      command.acceptVisitor(copyingVisitor);
    }

    // verify that the second binder is consistent with expectations
    assertEquals(copy.getCommands().size(), visitors.length);
    for (int i = 0; i < visitors.length; i++) {
      BinderVisitor<?> visitor = visitors[i];
      Command command = copy.getCommands().get(i);
      command.acceptVisitor(visitor);
    }
  }

