  private FutureTask<Service.State> futureGet(
      final List<Future<Service.State>> tasks, final Service.State state) {
    return new FutureTask<>(
        () -> {
          boolean ok = true;
          for (Future<Service.State> task : tasks) {
            try {
              ok = state == task.get();
            } catch (InterruptedException e) {
              return compositeState = Service.State.FAILED;
            } catch (ExecutionException e) {
              return compositeState = Service.State.FAILED;
            }
          }

          return compositeState = ok ? state : Service.State.FAILED;
        });
  }

