  public void testBindingSuperTypeAccessSubType() {
    final Integer testValue = 1024;
    Object instance =
        new Object() {
          @Bind(to = Number.class)
          private Integer anInt = testValue;
        };

    BoundFieldModule module = BoundFieldModule.of(instance);
    Injector injector = Guice.createInjector(module);

    try {
      injector.getInstance(Integer.class);
      fail();
    } catch (ConfigurationException e) {
      assertContains(e.getMessage(), "Could not find a suitable constructor in java.lang.Integer");
    }
  }

