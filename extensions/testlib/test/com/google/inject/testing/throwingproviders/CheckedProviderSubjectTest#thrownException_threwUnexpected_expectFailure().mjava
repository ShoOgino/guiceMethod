  @Test
  public void thrownException_threwUnexpected_expectFailure() {
    Class<? extends Throwable> expected = SummerException.class;
    Class<? extends Throwable> unexpected = UnsupportedOperationException.class;
    CheckedProvider<String> provider =
        CheckedProviders.throwing(StringCheckedProvider.class, unexpected);
    String transitionMessage =
        String.format(
            "exception thrown by <%s>\nNot true that <%s> is an instance of <%s>. "
                + "It is an instance of <%s>",
            getThrowingProviderName(UnsupportedOperationException.class.getName()),
            UnsupportedOperationException.class.getName(),
            SummerException.class.getName(),
            UnsupportedOperationException.class.getName());
    String oldMessage = transitionMessage.replaceFirst("\n", ": ");
    String newMessage =
        String.format(
            "exception thrown by <%s>\n"
                + "expected instance of: %s\n"
                + "but was instance of : %s\n"
                + "with value          : %s",
            getThrowingProviderName(UnsupportedOperationException.class.getName()),
            SummerException.class.getName(),
            UnsupportedOperationException.class.getName(),
            UnsupportedOperationException.class.getName());

    expectWhenTesting().that(provider).thrownException().isInstanceOf(expected);
    assertThat(expect.getFailure())
        .hasMessageThat()
        .isAnyOf(oldMessage, transitionMessage, newMessage);
  }

