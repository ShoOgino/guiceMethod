  public final synchronized void configure(Binder binder) {
    // when exposes is null, we're being run for the public injector
    if (exposes == null) {
      configurePublicBindings(binder);

    // otherwise we're being run for the private injector
    } else {
      checkState(this.privateBinder == null, "Re-entry is not allowed.");
      privateBinder = binder.skipSources(PrivateModule.class);
      try {
        configurePrivateBindings();

        ProviderMethodsModule providerMethodsModule = ProviderMethodsModule.forPrivateModule(this);
        for (ProviderMethod<?> providerMethod
            : providerMethodsModule.getProviderMethods(privateBinder)) {
          providerMethod.configure(privateBinder);
          if (providerMethod.getMethod().isAnnotationPresent(Exposed.class)) {
            expose(providerMethod.getKey());
          }
        }

        for (Expose<?> expose : exposes) {
          expose.initPrivateProvider(binder);
        }
      } finally {
        privateBinder = null;
      }
    }
  }

