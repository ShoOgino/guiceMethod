  /**
   * Returns a new mapbinder that collects entries of {@code keyType}/{@code 
   * valueType} in a {@link Map} that is itself bound with {@code annotationType}.
   */
  public static <K, V> MapBinder<K, V> newMapBinder(Binder binder, 
      Type keyType, Type valueType, Class<? extends Annotation> annotationType) {
    binder = binder.skipSources(MapBinder.class, RealMapBinder.class);
    return newMapBinder(binder, valueType,
        Key.get(MapBinder.<K, V>mapOf(keyType, valueType), annotationType),
        Key.get(MapBinder.<K, V>mapOfProviderOf(keyType, valueType), annotationType), 
        Multibinder.<Entry<K, Provider<V>>>newSetBinder(
            binder, entryOfProviderOf(keyType, valueType), annotationType));
  }

