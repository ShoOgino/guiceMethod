  /**
   * Adds a new map value binding to a multibindings collection, returning its
   * {@link BindingBuilder}.
   * 
   * @param binder the current Guice binder
   * @param entryKey the key used to fetch the element from the map
   * @param keyType the type of the key in the map, to disambiguate maps with the same value
   * @param valueType the type of value in the map
   * @param setName the string used internally to identify the collection
   */
  static <T> BindingBuilder<T> addMapBinding(Binder binder, Object entryKey,
      TypeLiteral<?> keyType, TypeLiteral<T> valueType, String setName) {
    RealElement annotation =
        new RealElement(setName, Element.Type.MAPBINDER, keyType, entryKey);
    LinkedBindingBuilder<T> delegate = binder
        .skipSources(RealElement.class)
        .bind(Key.get(valueType, annotation));
    return new BindingBuilder<T>(annotation, delegate);
  }

