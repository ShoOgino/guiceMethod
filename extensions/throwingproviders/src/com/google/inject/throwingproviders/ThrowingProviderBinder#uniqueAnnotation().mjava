  /**
   * Returns an annotation instance that is not equal to any other annotation
   * instances, for use in creating distinct {@link Key}s.
   */
  private static Annotation uniqueAnnotation() {
    final int value = nextUniqueValue.getAndIncrement();
    return new Internal() {
      public int value() {
        return value;
      }

      public Class<? extends Annotation> annotationType() {
        return Internal.class;
      }

      @Override public String toString() {
        return "@" + Internal.class.getName() + "(value=" + value + ")";
      }

      @Override public boolean equals(Object o) {
        return o instanceof Internal
            && ((Internal) o).value() == value();
      }

      @Override public int hashCode() {
        return 127 * "value".hashCode() ^ value;
      }
    };
  }

