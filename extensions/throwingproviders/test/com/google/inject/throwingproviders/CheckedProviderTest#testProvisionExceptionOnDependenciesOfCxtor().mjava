  public void testProvisionExceptionOnDependenciesOfCxtor() throws Exception {
    Injector injector =
        Guice.createInjector(
            new AbstractModule() {
              @Override
              protected void configure() {
                ThrowingProviderBinder.create(binder())
                    .bind(RemoteProvider.class, Foo.class)
                    .providing(ProvisionExceptionFoo.class);
                bindScope(
                    BadScope.class,
                    new Scope() {
                      @Override
                      public <T> Provider<T> scope(final Key<T> key, Provider<T> unscoped) {
                        return new Provider<T>() {
                          @Override
                          public T get() {
                            throw new OutOfScopeException("failure: " + key.toString());
                          }
                        };
                      }
                    });
              }
            });

    try {
      injector.getInstance(Key.get(remoteProviderOfFoo)).get();
      fail();
    } catch (ProvisionException pe) {
      Message message = Iterables.getOnlyElement(pe.getErrorMessages());
      assertEquals(
          "Error in custom provider, com.google.inject.OutOfScopeException: failure: "
              + Key.get(Unscoped1.class),
          message.getMessage());
    }
  }

