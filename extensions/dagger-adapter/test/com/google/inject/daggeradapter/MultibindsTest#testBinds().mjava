  public void testBinds() {
    Injector injector = Guice.createInjector(DaggerAdapter.from(BasicModule.class));

    Binding<Set<Number>> setBinding = injector.getBinding(new Key<Set<Number>>() {});
    assertThat(setBinding).hasProvidedValueThat().isEqualTo(ImmutableSet.of());
    assertThat(setBinding).hasSource(BasicModule.class, "set");

    Binding<Map<Integer, Double>> mapBinding =
        injector.getBinding(new Key<Map<Integer, Double>>() {});
    assertThat(mapBinding).hasProvidedValueThat().isEqualTo(ImmutableMap.of());
    assertThat(mapBinding).hasSource(BasicModule.class, "map");

    Binding<Set<Number>> qualifiedSetBinding =
        injector.getBinding(Key.get(new TypeLiteral<Set<Number>>() {}, TestQualifier.class));
    assertThat(qualifiedSetBinding).hasProvidedValueThat().isEqualTo(ImmutableSet.of());
    assertThat(qualifiedSetBinding).hasSource(BasicModule.class, "qualifiedSet");

    Binding<Map<Integer, Double>> qualifiedMapBinding =
        injector.getBinding(
            Key.get(new TypeLiteral<Map<Integer, Double>>() {}, TestQualifier.class));
    assertThat(qualifiedMapBinding).hasProvidedValueThat().isEqualTo(ImmutableMap.of());
    assertThat(qualifiedMapBinding).hasSource(BasicModule.class, "qualifiedMap");
  }

