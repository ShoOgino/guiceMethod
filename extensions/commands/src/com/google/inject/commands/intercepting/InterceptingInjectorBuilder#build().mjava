  public Injector build() {
    // record commands from the modules
    List<Element> elements = Elements.getElements(modules);

    // rewrite the commands to insert interception
    ModuleRewriter rewriter = new ModuleRewriter();
    Module module = rewriter.create(elements);

    // create and injector with the rewritten commands
    Injector injector = Guice.createInjector(module);

    // fail if any interceptions were missing
    if (!tolerateUnmatchedInterceptions 
        && !rewriter.keysIntercepted.equals(keysToIntercept)) {
      Set<Key<?>> keysNotIntercepted = Sets.newHashSet(keysToIntercept);
      keysNotIntercepted.removeAll(rewriter.keysIntercepted);
      throw new IllegalArgumentException("An explicit binding is required for "
          + "all intercepted keys, but was not found for " + keysNotIntercepted);
    }

    return injector;
  }

