  public void testMalformedBindCommands() {
    CommandRecorder recorder = new CommandRecorder(earlyRequestProvider);

    recorder.recordCommands(new AbstractModule() {
      protected void configure() {
        AnnotatedBindingBuilder<String> abb = bind(String.class);
        abb.annotatedWith(SampleAnnotation.class);
        try {
          abb.annotatedWith(Names.named("A"));
          fail();
        } catch(IllegalStateException expected) {
        }
      }
    });

    recorder.recordCommands(new AbstractModule() {
      protected void configure() {
        AnnotatedBindingBuilder<String> abb = bind(String.class);
        abb.toInstance("A");
        try {
          abb.toInstance("B");
          fail();
        } catch(IllegalStateException expected) {
        }
      }
    });

    recorder.recordCommands(new AbstractModule() {
      protected void configure() {
        ScopedBindingBuilder sbb = bind(List.class).to(ArrayList.class);
        sbb.in(Scopes.NO_SCOPE);
        try {
          sbb.asEagerSingleton();
          fail();
        } catch(IllegalStateException expected) {
        }
      }
    });
  }

