  public void testAssistedProviderIsDisallowed() {
    try {
      Guice.createInjector(
          new AbstractModule() {
            @Override
            protected void configure() {
              bind(ProviderBasedColoredCarFactory.class)
                  .toProvider(
                      FactoryProvider.newFactory(
                          ProviderBasedColoredCarFactory.class, Subaru.class));
            }
          });
      fail();
    } catch (CreationException expected) {
      assertEquals(expected.getMessage(), 4, expected.getErrorMessages().size());
      // Assert each method individually, because JDK7 doesn't guarantee method ordering.
      assertContains(
          expected.getMessage(),
          ") A Provider may not be a type in a factory method of an AssistedInject."
              + "\n  Offending instance is parameter [1] with key"
              + " [com.google.inject.Provider<"
              + Color.class.getName()
              + ">] on method ["
              + ProviderBasedColoredCarFactory.class.getName()
              + ".createCar()]");
      assertContains(
          expected.getMessage(),
          ") A Provider may not be a type in a factory method of an AssistedInject."
              + "\n  Offending instance is parameter [2] with key"
              + " [com.google.inject.Provider<java.lang.String>] on method ["
              + ProviderBasedColoredCarFactory.class.getName()
              + ".createCar()]");
      assertContains(
          expected.getMessage(),
          ") A Provider may not be a type in a factory method of an AssistedInject."
              + "\n  Offending instance is parameter [1] with key"
              + " [com.google.inject.Provider<"
              + Color.class.getName()
              + ">"
              + " annotated with @com.google.inject.assistedinject.Assisted(value="
              + Annotations.memberValueString("color")
              + ")]"
              + " on method ["
              + ProviderBasedColoredCarFactory.class.getName()
              + ".createMustang()]");
      assertContains(
          expected.getMessage(),
          ") No implementation for com.google.inject.assistedinject."
              + "FactoryProvider2Test$ProviderBasedColoredCarFactory was bound.");
    }
  }

