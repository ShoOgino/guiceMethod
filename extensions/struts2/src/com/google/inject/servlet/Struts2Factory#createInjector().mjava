  private void createInjector() {
    logger.info("Loading struts2 Guice support...");

    // Attach to parent Guice injector from GS2.
    Injector injector = (Injector) GuiceFilter.getServletContext()
        .getAttribute(GuiceServletContextListener.INJECTOR_NAME);

    // Something is wrong, since this should be there if GuiceServletContextListener
    // was present.
    if (null == injector) {
      logger.severe(ERROR_NO_INJECTOR);
      throw new RuntimeException(ERROR_NO_INJECTOR);
    }

    if (module != null) {
      throw new RuntimeException("The struts2 plugin no longer supports specifying a module"
          + "via the 'guice.module' property in XML."
          + " Please install your module via a GuiceServletContextListener instead.");
    }

    this.strutsInjector = injector.createChildInjector(new AbstractModule() {
      protected void configure() {

        // Tell the injector about all the action classes, etc., so it
        // can validate them at startup.
        for (Class<?> boundClass : boundClasses) {
          // TODO: Set source from Struts XML.
          bind(boundClass);
        }

        // Validate the interceptor class.
        for (ProvidedInterceptor interceptor : interceptors) {
          interceptor.validate(binder());
        }
      }
    });

    // Inject interceptors.
    for (ProvidedInterceptor interceptor : interceptors) {
      interceptor.inject();
    }

    logger.info("Injector created successfully.");
  }

