  public void testTransferNonHttpRequest_concurrentUseFails() throws Exception {
    Callable<Boolean> callable = new Callable<Boolean>() {
      @Override public Boolean call() throws Exception {
        ExecutorService executor = Executors.newSingleThreadExecutor();
        try {
          Future<Boolean> future = executor.submit(ServletScopes.transferRequest(FALSE_CALLABLE));
          try {
            return future.get();
          } catch (ExecutionException e) {
            return e.getCause() instanceof IllegalStateException;
          }
        } finally {
          executor.shutdownNow();
        }
      }
    };

    ImmutableMap<Key<?>, Object> seedMap = ImmutableMap.of();
    assertTrue(ServletScopes.scopeRequest(callable, seedMap).call());
  }

