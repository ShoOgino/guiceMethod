  public void testReturnDelegateCookies() {
    Cookie[] cookies = new Cookie[]{
        new Cookie("testName1", "testValue1"),
        new Cookie("testName2", "testValue2")
    };
    HttpServletRequest delegate = createMock(HttpServletRequest.class);
    expect(delegate.getCookies()).andStubReturn(cookies);

    replay(delegate);

    ContinuingHttpServletRequest continuingRequest = new ContinuingHttpServletRequest(
        delegate);

    assertCookieArraysEqual(cookies, continuingRequest.getCookies());

    // Now mutate the original cookies, this shouldnt be reflected in the continued request.
    cookies[0].setValue("INVALID");
    cookies[1].setValue("INVALID");
    cookies[1].setMaxAge(123);

    try {
      assertCookieArraysEqual(cookies, continuingRequest.getCookies());
      fail();
    } catch (AssertionFailedError e) {
      // Expected.
    }

    // Perform a snapshot of the snapshot.
    ContinuingHttpServletRequest furtherContinuingRequest = new ContinuingHttpServletRequest(
        continuingRequest);

    // The cookies should be fixed.
    assertCookieArraysEqual(continuingRequest.getCookies(), furtherContinuingRequest.getCookies());

    verify(delegate);
  }

