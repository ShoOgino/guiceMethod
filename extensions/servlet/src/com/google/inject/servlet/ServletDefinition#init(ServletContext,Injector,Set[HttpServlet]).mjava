  public void init(
      final ServletContext servletContext, Injector injector, Set<HttpServlet> initializedSoFar)
      throws ServletException {

    // This absolutely must be a singleton, and so is only initialized once.
    if (!Scopes.isSingleton(injector.getBinding(servletKey))) {
      throw new ServletException(
          "Servlets must be bound as singletons. "
              + servletKey
              + " was not bound in singleton scope.");
    }

    HttpServlet httpServlet = injector.getInstance(servletKey);
    this.httpServlet.set(httpServlet);

    // Only fire init() if we have not appeared before in the filter chain.
    if (initializedSoFar.contains(httpServlet)) {
      return;
    }

    // initialize our servlet with the configured context params and servlet context
    httpServlet.init(
        new ServletConfig() {
          @Override
          public String getServletName() {
            return servletKey.toString();
          }

          @Override
          public ServletContext getServletContext() {
            return servletContext;
          }

          @Override
          public String getInitParameter(String s) {
            return initParams.get(s);
          }

          @Override
          public Enumeration<?> getInitParameterNames() {
            return Iterators.asEnumeration(initParams.keySet().iterator());
          }
        });

    // Mark as initialized.
    initializedSoFar.add(httpServlet);
  }

