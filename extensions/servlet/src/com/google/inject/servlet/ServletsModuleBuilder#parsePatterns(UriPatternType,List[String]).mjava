  private List<UriPatternMatcher> parsePatterns(UriPatternType type, List<String> patterns) {
    List<UriPatternMatcher> patternMatchers = new ArrayList<UriPatternMatcher>();
    for (String pattern : patterns) {
      if (!servletUris.add(pattern)) {
        binder
            .skipSources(ServletModule.class, ServletsModuleBuilder.class)
            .addError("More than one servlet was mapped to the same URI pattern: " + pattern);
      } else {
        UriPatternMatcher matcher = null;
        try {
          matcher = UriPatternType.get(type, pattern);
        } catch (IllegalArgumentException iae) {
          binder
              .skipSources(ServletModule.class, ServletsModuleBuilder.class)
              .addError("%s", iae.getMessage());
        }
        if (matcher != null) {
          patternMatchers.add(matcher);
        }
      }
    }
    return patternMatchers;
  }

