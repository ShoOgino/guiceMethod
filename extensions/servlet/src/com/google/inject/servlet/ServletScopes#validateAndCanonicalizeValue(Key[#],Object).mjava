  /**
   * Validates the key and object, ensuring the value matches the key type, and canonicalizing null
   * objects to the null sentinel.
   */
  private static Object validateAndCanonicalizeValue(Key<?> key, Object object) {
    if (object == null || object == NullObject.INSTANCE) {
      return NullObject.INSTANCE;
    }

    Preconditions.checkArgument(
        key.getTypeLiteral().getRawType().isInstance(object),
        "Value[%s] of type[%s] is not compatible with key[%s]",
        object,
        object.getClass().getName(),
        key);

    return object;
  }

