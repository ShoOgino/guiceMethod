  public void testBindWithMultipleScopesAddsError() {
    checkModule(
        new AbstractModule() {
          protected void configure() {
            ScopedBindingBuilder sbb = bind(List.class).to(ArrayList.class);
            sbb.in(Scopes.NO_SCOPE);
            sbb.asEagerSingleton();
          }
        },

        new FailingVisitor() {
          @Override public <T> Void visitBind(BindCommand<T> command) {
            return null;
          }
        },

        new FailingVisitor() {
          @Override public Void visitAddMessage(AddMessageCommand command) {
            assertEquals("Scope is set more than once.", command.getMessage().getMessage());
            assertNull(command.getMessage().getCause());
            assertTrue(command.getMessage().getInjectionPoints().isEmpty());
            assertContains(command.getMessage().getSource(), "CommandRecorderTest.java");
            return null;
          }
        }
    );
  }

