  /**
   * There's a pass-through of user code in the scope. We want exceptions thrown by Guice to be
   * limited to a single exception, even if it passes through user code.
   */
  public void testExceptionsCollapsedWithScopes() {
    try {
      Guice.createInjector(new AbstractModule() {
        protected void configure() {
          bind(B.class).in(Scopes.SINGLETON);
        }
      }).getInstance(A.class);
      fail();
    } catch (ProvisionException e) {
      assertTrue(e.getCause() instanceof UnsupportedOperationException);
      assertFalse(e.getMessage().contains("custom provider"));
      assertContains(e.getMessage(), "Error injecting constructor",
          "while locating com.google.inject.ProvisionExceptionTest$D",
          "for parameter 0 at com.google.inject.ProvisionExceptionTest$C.setD",
          "while locating com.google.inject.ProvisionExceptionTest$C",
          "for field at com.google.inject.ProvisionExceptionTest$B.c",
          "while locating com.google.inject.ProvisionExceptionTest$B",
          "for parameter 0 at com.google.inject.ProvisionExceptionTest$A",
          "while locating com.google.inject.ProvisionExceptionTest$A");
    }
  }

