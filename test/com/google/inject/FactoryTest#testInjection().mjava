  public void testInjection() throws Exception {
    ContainerBuilder cb = new ContainerBuilder();

    // Called from getInstance().
    cb.bind(Foo.class).to(createFactory(Foo.class, "default", null));

    // Called during preloading.
    cb.bind(Bar.class)
        .named("fooBar")
        .to(createFactory(Bar.class, "fooBar", null))
        .in(Scopes.CONTAINER);

    cb.bind(Tee.class).named("tee1")
        .to(createFactory(Tee.class, "tee1",
            Bar.class.getDeclaredConstructor(Tee.class)));

    cb.bind(Tee.class).named("tee2").to(
        createFactory(Tee.class, "tee2", Bar.class.getDeclaredField("tee2")));

    final Method execute = Tee.class.getDeclaredMethod(
        "execute", Bob.class, Bob.class);
    cb.bind(Bob.class).named("bob1").to(
        createFactory(Bob.class, "bob1", execute));
    cb.bind(Bob.class).named("bob2").to(
        createFactory(Bob.class, "bob2", execute));

    Container c = cb.create(true);

    Foo foo = c.getFactory(Key.get(Foo.class)).get();

    assertNotNull(foo.bar);
    assertNotNull(foo.bar.tee1);
    assertNotNull(foo.bar.tee2);
    assertNotNull(foo.bar.tee1.bob1);
    assertNotNull(foo.bar.tee1.bob2);
    assertNotNull(foo.bar.tee2.bob1);
    assertNotNull(foo.bar.tee2.bob2);
  }

