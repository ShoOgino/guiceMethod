  public void testInjection() throws Exception {
    BinderImpl cb = new BinderImpl(Stage.PRODUCTION);

    // Called from getInstance().
    cb.bind(Foo.class)
        .annotatedWith(FooAnnotation.class)
        .toFactory(createFactory(Foo.class, FooAnnotation.class, null));

    // Called during preloading.
    cb.bind(Bar.class)
        .annotatedWith(BarAnnotation.class)
        .toFactory(createFactory(Bar.class, BarAnnotation.class, null))
        .in(Scopes.CONTAINER);

    cb.bind(Tee.class)
        .annotatedWith(TeeAnnotation1.class)
        .toFactory(createFactory(Tee.class, TeeAnnotation1.class,
            Bar.class.getDeclaredConstructor(Tee.class)));

    cb.bind(Tee.class)
        .annotatedWith(TeeAnnotation2.class)
        .toFactory(createFactory(Tee.class, TeeAnnotation2.class,
            Bar.class.getDeclaredField("tee2")));

    final Method execute = Tee.class.getDeclaredMethod(
        "execute", Bob.class, Bob.class);
    cb.bind(Bob.class).annotatedWith(BobAnnotation1.class).toFactory(
        createFactory(Bob.class, BobAnnotation1.class, execute));
    cb.bind(Bob.class).annotatedWith(BobAnnotation2.class).toFactory(
        createFactory(Bob.class, BobAnnotation2.class, execute));

    Container c = cb.createContainer();

    Foo foo = c.getProvider(Key.get(Foo.class, FooAnnotation.class)).get();

    assertNotNull(foo.bar);
    assertNotNull(foo.bar.tee1);
    assertNotNull(foo.bar.tee2);
    assertNotNull(foo.bar.tee1.bob1);
    assertNotNull(foo.bar.tee1.bob2);
    assertNotNull(foo.bar.tee2.bob1);
    assertNotNull(foo.bar.tee2.bob2);
  }

