  @SuppressWarnings("unchecked")
  public void testProxyClassLoading() {
    final ClassLoader testClassLoader = new TestVisibilityClassLoader();

    final Class<ProxyTest> testAPIClazz;
    final Class<ProxyTest> testImplClazz;

    try {
      testAPIClazz = (Class<ProxyTest>) testClassLoader.loadClass(ProxyTest.class.getName());
      testImplClazz = (Class<ProxyTest>) testClassLoader.loadClass(ProxyTestImpl.class.getName());
    } catch (final Exception e) {
      throw new RuntimeException(e);
    }

    final ProxyTest test = Guice.createInjector(new Module() {
      public void configure(Binder binder) {

        binder.bind(testAPIClazz).to(testImplClazz);

        // Force proxy...
        binder.bindInterceptor(any(), any(), new MethodInterceptor() {
          public Object invoke(MethodInvocation chain)
              throws Throwable {
            return chain.proceed() + " WORLD";
          }
        });
      }
    }).getInstance(testAPIClazz);

    // verify method interception still works
    assertEquals("HELLO WORLD", test.sayHello());
  }

