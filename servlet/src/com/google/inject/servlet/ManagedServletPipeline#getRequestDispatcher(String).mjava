  public RequestDispatcher getRequestDispatcher(String path) {
    for (final ServletDefinition servletDefinition : servletDefinitions) {
      if (servletDefinition.shouldServe(path)) {
        return new RequestDispatcher() {

          public void forward(ServletRequest servletRequest, ServletResponse servletResponse)
              throws ServletException, IOException {

            if (servletResponse.isCommitted()) {
              throw new IllegalStateException("Response has been committed--you can "
                  + "only call forward before committing the response (hint: don't "
                  + "flush buffers)");
            }

            //clear buffer before forwarding
            servletResponse.resetBuffer();

            //now dispatch to the servlet
            servletDefinition.doService(servletRequest, servletResponse);
          }

          public void include(ServletRequest servletRequest, ServletResponse servletResponse)
              throws ServletException, IOException {

            //route to the target servlet
            servletDefinition.doService(servletRequest, servletResponse);
          }
        };
      }
    }

    //otherwise, can't process
    return null;
  }

