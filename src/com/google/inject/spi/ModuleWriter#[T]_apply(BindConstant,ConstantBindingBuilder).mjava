  /**
   * Execute this target against the constant binding builder.
   */
  public <T> void apply(BindConstant bindConstant, ConstantBindingBuilder builder) {
    T t = bindConstant.acceptTargetVisitor(Elements.<T>getInstanceVisitor());
    Class<?> targetType = t.getClass();
    if (targetType == String.class) {
      builder.to((String) t);
    } else if (targetType == Integer.class) {
      builder.to((Integer) t);
    } else if (targetType == Long.class) {
      builder.to((Long) t);
    } else if (targetType == Boolean.class) {
      builder.to((Boolean) t);
    } else if (targetType == Double.class) {
      builder.to((Double) t);
    } else if (targetType == Float.class) {
      builder.to((Float) t);
    } else if (targetType == Short.class) {
      builder.to((Short) t);
    } else if (targetType == Character.class) {
      builder.to((Character) t);
    } else if (targetType == Class.class) {
      builder.to((Class) t);
    } else if (Enum.class.isAssignableFrom(targetType)) {
      builder.to((Enum) t);
    } else {
      throw new IllegalArgumentException("Non-constant target " + targetType);
    }
  }

