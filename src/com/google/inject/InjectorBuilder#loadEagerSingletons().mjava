  public void loadEagerSingletons() {
    // load eager singletons, or all singletons if we're in Stage.PRODUCTION.
    for (final BindingImpl<?> binding
        : Iterables.concat(injector.explicitBindings.values(), injector.jitBindings.values())) {
      if ((stage == Stage.PRODUCTION && binding.getScope() == SINGLETON)
          || binding.getLoadStrategy() == LoadStrategy.EAGER) {
        try {
          injector.callInContext(new ContextualCallable<Void>() {
            public Void call(InternalContext context) {
              Dependency<?> dependency = Dependency.get(binding.key);
              context.setDependency(dependency);
              errors.pushSource(dependency);
              try {
                binding.internalFactory.get(errors, context, dependency);
              } catch (ErrorsException e) {
                errors.merge(e.getErrors());
              } finally {
                context.setDependency(null);
                errors.popSource(dependency);
              }

              return null;
            }
          });
        } catch (ErrorsException e) {
          throw new AssertionError();
        }
      }
    }
  }

