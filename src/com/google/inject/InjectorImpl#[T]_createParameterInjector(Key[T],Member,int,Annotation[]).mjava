  <T> SingleParameterInjector<T> createParameterInjector(
      final Key<T> key, Member member, int index, Annotation[] annotations)
      throws MissingDependencyException {
    InternalFactory<? extends T> factory =
        SourceProviders.withDefault(StackTraceElements.forMember(member),
      new Callable<InternalFactory<? extends T>>() {
        public InternalFactory<? extends T> call() throws Exception {
          return getInternalFactory(key);
        }
      }
    );

    if (factory == null) {
      throw new MissingDependencyException(key, member);
    }

    ExternalContext<T> externalContext = ExternalContext.newInstance(
        member, index, Nullability.forAnnotations(annotations), key, this);
    return new SingleParameterInjector<T>(externalContext, factory);
  }

