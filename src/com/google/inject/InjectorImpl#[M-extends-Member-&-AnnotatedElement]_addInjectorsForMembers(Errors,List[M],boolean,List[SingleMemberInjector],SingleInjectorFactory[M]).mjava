  <M extends Member & AnnotatedElement> void addInjectorsForMembers(
      Errors errors, List<M> members, boolean statics, List<SingleMemberInjector> injectors,
      SingleInjectorFactory<M> injectorFactory) {
    for (M member : members) {
      if (isStatic(member) != statics) {
        continue;
      }

      Inject inject = member.getAnnotation(Inject.class);
      if (inject == null) {
        continue;
      }

      Errors errorsForMember = inject.optional() ? new Errors() : errors;
      Object source = StackTraceElements.forMember(member);
      errorsForMember.pushSource(source);
      try {
        injectors.add(injectorFactory.create(this, member, errorsForMember));
      } catch (ResolveFailedException ignoredForNow) {
        // if this was an optional injection, it is completely ignored
      } finally {
        errorsForMember.popSource(source);
      }
    }
  }

