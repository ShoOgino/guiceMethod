  <T> Provider<T> maybeGetProvider(final Key<T> key) {
    final InternalFactory<? extends T> factory = getInternalFactory(key);

    if (factory == null) {
      return null;
    }

    return new Provider<T>() {
      public T get() {
        return callInContext(new ContextualCallable<T>() {
          public T call(InternalContext context) {
            context.pushExternalContext(ExternalContext.newInstance(
                null, Nullability.NOT_NULLABLE, key, InjectorImpl.this));
            try {
              return factory.get(context);
            }
            finally {
              context.popExternalContext();
            }
          }
        });
      }

      public String toString() {
        return factory.toString();
      }
    };
  }

