    private Ranker(Class<? extends Annotation> longest, Class<? extends Annotation> nested,
      Class<? extends Annotation>... furtherNested) {
      scopeAnnotations = new ImmutableList.Builder<Class<? extends Annotation>>()
          .add(longest)
          .add(nested)
          .addAll(asList(furtherNested))
          .build();

      ImmutableMap.Builder<Scope, Integer> scopeToRankBuilder = ImmutableMap.builder();
      Map<Class<? extends Annotation>, Scope> annotationToScope = injector.getScopeBindings();
      int i = 0;
      for (Class<? extends Annotation> scopeAnnotation : scopeAnnotations) {
        Scope scope = annotationToScope.get(scopeAnnotation);
        checkArgument(scope != null, "No scope binding for %s", scopeAnnotation);
        scopeToRankBuilder.put(scope, i++);
      }
      scopeToRank = scopeToRankBuilder.build();
    }

