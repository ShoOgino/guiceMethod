  private <T> void validateKey(Object source, Key<T> key) {
    if (key.hasAnnotationType()) {
      Class<? extends Annotation> annotationType = key.getAnnotationType();

      if (!Annotations.isRetainedAtRuntime(annotationType)) {
        errors.at(StackTraceElements.forType(annotationType)).missingRuntimeRetention(source);
      }

      if (!Key.isBindingAnnotation(annotationType)) {
        errors.at(StackTraceElements.forType(annotationType)).missingBindingAnnotation(source);
      }
    }

    Class<? super T> rawType = key.getRawType();
    if (!Classes.isConcrete(rawType)) {
      Class<? extends Annotation> scopeAnnotation = Scopes.getScopeAnnotation(errors, rawType);
      if (scopeAnnotation != null) {
        errors.at(StackTraceElements.forType(rawType))
            .scopeAnnotationOnAbstractType(scopeAnnotation, rawType, source);
      }
    }
  }

