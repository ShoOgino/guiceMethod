    public SingleFieldInjector(final InjectorImpl injector, Field field)
        throws MissingDependencyException {
      this.field = field;

      // Ewwwww...
      field.setAccessible(true);

      final Key<?> key = Keys.get(
          field.getGenericType(), field, field.getAnnotations(), errorHandler);
      factory = SourceProviders.withDefault(StackTraceElements.forMember(field),
        new Callable<InternalFactory<?>>() {
          public InternalFactory<?> call() throws Exception {
            return injector.getInternalFactory(key);
          }
        }
      );

      if (factory == null) {
        throw new MissingDependencyException(key, field);
      }

      this.injectionPoint = InjectionPoint.newInstance(field,
          Nullability.forAnnotations(field.getAnnotations()), key, injector);
    }

