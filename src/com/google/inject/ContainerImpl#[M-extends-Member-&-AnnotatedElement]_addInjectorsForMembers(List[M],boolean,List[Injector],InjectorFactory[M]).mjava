  <M extends Member & AnnotatedElement> void addInjectorsForMembers(
      List<M> members, boolean statics, List<Injector> injectors,
      InjectorFactory<M> injectorFactory) {
    for (M member : members) {
      if (isStatic(member) == statics) {
        Inject inject = null;
        try {
          inject = SurrogateAnnotations.findAnnotation(Inject.class, member);
        } catch (DuplicateAnnotationException e) {
          errorHandler.handle(ErrorMessages.DUPLICATE_ANNOTATIONS,
              Inject.class.getSimpleName(), member, e.getFirst(),
              e.getSecond());
        }

        if (inject != null) {
          try {
            injectors.add(injectorFactory.create(this, member, inject.value()));
          }
          catch (MissingDependencyException e) {
            if (inject.required()) {
              // TODO: Report errors for more than one parameter per member.
              e.handle(errorHandler);
            }
          }
        }
      }
    }
  }

