  /**
   * Gets parameter injectors.
   *
   * @param member to which the parameters belong
   * @return injections
   */
  <M extends Member & AnnotatedElement> SingleParameterInjector<?>[] getParametersInjectors(
      M member, List<Dependency<?>> parameters, Errors errors) throws ErrorsException {
    Annotation misplacedBindingAnnotation
        = Keys.findBindingAnnotation(errors, member, member.getAnnotations());
    if (misplacedBindingAnnotation != null) {
      errors.misplacedBindingAnnotation(member, misplacedBindingAnnotation);
    }

    SingleParameterInjector<?>[] parameterInjectors
        = new SingleParameterInjector<?>[parameters.size()];
    int index = 0;
    for (Dependency<?> parameter : parameters) {
      try {
        parameterInjectors[index] = createParameterInjector(parameter, member, errors);
      } catch (ErrorsException rethrownBelow) {
      }
      index++;
    }

    errors.throwIfNecessary();
    return parameterInjectors;
  }

