  private static <E> ImmutableList<E> createFromIterable(
      Iterable<?> source, int estimatedSize) {
    Object[] array = new Object[estimatedSize];
    int index = 0;

    for (Object element : source) {
      if (index == estimatedSize) {
        // At least one element was added after our call to size().
        estimatedSize = ((estimatedSize / 2) + 1) * 3;
        array = copyOf(array, estimatedSize);
      }
      if (element == null) {
        throw new NullPointerException("at index " + index);
      }
      array[index++] = element;
    }

    if (index == 0) {
      return of();
    }

    if (index != estimatedSize) {
      array = copyOf(array, index);
    }

    return new RegularImmutableList<E>(array, 0, index);
  }

