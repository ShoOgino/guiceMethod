  public static void formatSource(Formatter formatter, Object source) {
    if (source instanceof Dependency) {
      Dependency<?> dependency = (Dependency<?>) source;
      InjectionPoint injectionPoint = dependency.getInjectionPoint();
      if (injectionPoint != null) {
        formatInjectionPoint(formatter, dependency, injectionPoint);
      } else {
        formatSource(formatter, dependency.getKey());
      }

    } else if (source instanceof InjectionPoint) {
      formatInjectionPoint(formatter, null, (InjectionPoint) source);

    } else if (source instanceof Class) {
      formatter.format("  at %s%n", StackTraceElements.forType((Class<?>) source));

    } else if (source instanceof Member) {
      formatter.format("  at %s%n", StackTraceElements.forMember((Member) source));

    } else if (source instanceof Key) {
      Key<?> key = (Key<?>) source;
      Type type = key.getTypeLiteral().getType();
      if (key.getAnnotationType() != null) {
        formatter.format("  at binding for %s annotated with %s%n", MoreTypes.toString(type),
            (key.getAnnotation() != null ? key.getAnnotation() : key.getAnnotationType()));

      } else if (type instanceof Class) {
        formatter.format("  at binding for %s%n", StackTraceElements.forType((Class<?>) type));

      } else {
          formatter.format("  at binding for %s%n", type);

      }
    } else {
      formatter.format("  at %s%n", source);
    }
  }

