  /**
   * Registers an instance for member injection when that step is performed.
   *
   * @param instance an instance that optionally has members to be injected (each annotated with
   *      @Inject).
   * @param source the source location that this injection was requested
   */
  public <T> Initializable<T> requestInjection(T instance, Object source,
      Set<InjectionPoint> injectionPoints) {
    checkNotNull(source);

    // short circuit if the object doesn't have any @Inject members
    if (injectionPoints.isEmpty()) {
      return Initializables.of(instance);
    }

    InjectableReference<T> initializable = new InjectableReference<T>(instance, source);
    pendingInjection.put(instance, initializable);
    return initializable;
  }

