  /**
   * Gets the scope name from annotations on the given type. Records errors if
   * multiple names are found.
   */
  static String getScopeNameForType(Class<?> implementation,
      ErrorHandler errorHandler) {
    // The first name and annotation type we come to. We hold on to the
    // annotation type in case we need it in an error message.
    String firstName = null;
    Class<? extends Annotation> firstType = null;

    for (Annotation annotation : implementation.getAnnotations()) {
      // Look for @Scoped on the class itself and on annotations.
      Scoped scoped = findScoped(annotation);

      // If we found an @Scoped, record its value or an error if we already
      // recorded a value.
      if (scoped != null) {
        String name = scoped.value();
        Class<? extends Annotation> type = annotation.annotationType();
        if (firstName == null) {
          firstName = name;
          firstType = type;
        } else {
          // Scope already set.
          errorHandler.handle(ErrorMessages.SCOPE_ALREADY_SET_BY_ANNOTATION,
              implementation, type.getSimpleName(), name,
              firstType.getSimpleName(), firstName);
        }
      }
    }

    return firstName;
  }

