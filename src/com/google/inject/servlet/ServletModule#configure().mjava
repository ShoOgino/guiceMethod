  protected void configure() {
    // Scopes.
    bindScope(RequestScoped.class, REQUEST);
    bindScope(SessionScoped.class, SESSION);

    // Bind request.
    Factory<HttpServletRequest> requestFactory =
        new Factory<HttpServletRequest>() {
          public HttpServletRequest get(Context context) {
            return GuiceFilter.getRequest();
          }

          public String toString() {
            return "RequestFactory";
          }
        };
    bind(HttpServletRequest.class).toFactory(requestFactory);
    bind(ServletRequest.class).toFactory(requestFactory);

    // Bind response.
    Factory<HttpServletResponse> responseFactory =
        new Factory<HttpServletResponse>() {
          public HttpServletResponse get(Context context) {
            return GuiceFilter.getResponse();
          }

          public String toString() {
            return "ResponseFactory";
          }
        };
    bind(HttpServletResponse.class).toFactory(responseFactory);
    bind(ServletResponse.class).toFactory(responseFactory);

    // Bind session.
    bind(HttpSession.class).toFactory(new Factory<HttpSession>() {
      public HttpSession get(Context context) {
        return GuiceFilter.getRequest().getSession();
      }

      public String toString() {
        return "SessionFactory";
      }
    });

    // Bind request parameters.
    bind(new TypeLiteral<Map<String, String[]>>() {})
        .annotatedWith(RequestParameters.class)
        .toFactory(new Factory<Map<String, String[]>>() {
              @SuppressWarnings({"unchecked"})
              public Map<String, String[]> get(Context context) {
                return GuiceFilter.getRequest().getParameterMap();
              }

              public String toString() {
                return "RequestParametersFactory";
              }
            });
  }

