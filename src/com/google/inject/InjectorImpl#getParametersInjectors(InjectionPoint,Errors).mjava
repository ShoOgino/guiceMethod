  /**
   * Returns parameter injectors, or {@code null} if there are no parameters.
   */
  SingleParameterInjector<?>[] getParametersInjectors(InjectionPoint injectionPoint, Errors errors)
      throws ErrorsException {
    errors.pushSource(injectionPoint);
    try {
      Member member = injectionPoint.getMember();
      Annotation misplacedBindingAnnotation = Annotations.findBindingAnnotation(
          errors, member, ((AnnotatedElement) member).getAnnotations());
      if (misplacedBindingAnnotation != null) {
        errors.misplacedBindingAnnotation(member, misplacedBindingAnnotation);
      }
    } finally {
      errors.popSource(injectionPoint);
    }

    List<Dependency<?>> parameters = injectionPoint.getDependencies();
    if (parameters.isEmpty()) {
      return null;
    }

    SingleParameterInjector<?>[] parameterInjectors
        = new SingleParameterInjector<?>[parameters.size()];
    int index = 0;
    for (Dependency<?> parameter : parameters) {
      errors.pushSource(parameter);
      try {
        parameterInjectors[index] = createParameterInjector(parameter, errors);
      } catch (ErrorsException rethrownBelow) {
        // rethrown below
      } finally {
        errors.popSource(parameter);
      }
      index++;
    }

    errors.throwIfNecessary();
    return parameterInjectors;
  }

