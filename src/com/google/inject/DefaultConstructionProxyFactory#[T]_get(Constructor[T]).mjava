  public <T> ConstructionProxy<T> get(Constructor<T> constructor) {
    Class<T> classToConstruct = constructor.getDeclaringClass();
    FastClass fastClass = GuiceFastClass.create(classToConstruct);
    final FastConstructor fastConstructor
        = fastClass.getConstructor(constructor);
    return new ConstructionProxy<T>() {
      @SuppressWarnings("unchecked")
      public T newInstance(Object... arguments)
          throws InvocationTargetException {
        return (T) fastConstructor.newInstance(arguments);
      }
    };
  }

