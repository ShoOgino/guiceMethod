  @Override public Boolean visitBindConstant(BindConstant command) {
    Object value = command.acceptTargetVisitor(new DefaultBindTargetVisitor<Object, Object>() {
      @Override public Object visitInstance(Object instance) {
        return instance;
      }

      @Override protected Object visitTarget() {
        errors.missingConstantValues();
        return null;
      }
    });

    if (value == null) {
      return true;
    }

    validateKey(command.getSource(), command.getKey());
    ConstantFactory<Object> factory = new ConstantFactory<Object>(value);
    putBinding(new ConstantBindingImpl<Object>(
        injector, command.getKey(), command.getSource(), factory, value));

    return true;
  }

