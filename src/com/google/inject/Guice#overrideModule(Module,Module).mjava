  /**
   * Returns a new {@link Module} that overlays {@code overridesModule} over
   * {@code module}. If a key is bound by both modules, only the binding in
   * overrides is kept. This can be used to replace bindings in a production
   * module with test bindings:
   * <pre>
   * Module functionalTestModule
   *     = Guice.overrideModule(new ProductionModule(), new TestModule());
   * </pre>
   */
  public static Module overrideModule(Module module, Module overridesModule) {
    CommandRecorder commandRecorder = new CommandRecorder();
    final List<Command> commands = commandRecorder.recordCommands(module);
    final List<Command> overrideCommands = commandRecorder.recordCommands(overridesModule);

    return new AbstractModule() {
      public void configure() {
        final Set<Key> overriddenKeys = Sets.newHashSet();

        // execute the overrides module, keeping track of which keys were bound
        new CommandReplayer() {
          @Override public <T> void replayBind(Binder binder, BindCommand<T> command) {
            overriddenKeys.add(command.getKey());
            super.replayBind(binder, command);
          }
          @Override public void replayBindConstant(Binder binder, BindConstantCommand command) {
            overriddenKeys.add(command.getKey());
            super.replayBindConstant(binder, command);
          }
        }.replay(binder(), overrideCommands);

        // bind the regular module, skipping overridden keys. We only skip each
        // overridden key once, so things still blow up if the module binds the
        // same key multiple times
        new CommandReplayer() {
          @Override public <T> void replayBind(Binder binder, BindCommand<T> command) {
            if (!overriddenKeys.remove(command.getKey())) {
              super.replayBind(binder, command);
            }
          }
          @Override public void replayBindConstant(Binder binder, BindConstantCommand command) {
            if (!overriddenKeys.remove(command.getKey())) {
              super.replayBindConstant(binder, command);
            }
          }
        }.replay(binder(), commands);

        // TODO: bind the overridden keys using multibinder
      }
    };
  }

