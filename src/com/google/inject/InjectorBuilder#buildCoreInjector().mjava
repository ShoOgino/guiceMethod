  /** Builds the injector. */
  private void buildCoreInjector() {
    new ErrorsElementProcessor(errors)
        .processCommands(elements);

    BindInterceptorElementProcessor bindInterceptorCommandProcessor
        = new BindInterceptorElementProcessor(errors);
    bindInterceptorCommandProcessor.processCommands(elements);
    ConstructionProxyFactory proxyFactory = bindInterceptorCommandProcessor.createProxyFactory();
    injector.reflection = reflectionFactory.create(proxyFactory);
    stopwatch.resetAndLog("Interceptors creation");

    new ScopesElementProcessor(errors, injector.scopes).processCommands(elements);
    stopwatch.resetAndLog("Scopes creation");

    new ConvertToTypesElementProcessor(errors, injector.converters).processCommands(elements);
    stopwatch.resetAndLog("Converters creation");

    bindLogger();
    bindCommandProcesor = new BindElementProcessor(errors,
        injector, injector.scopes, injector.explicitBindings,
        injector.memberInjector);
    bindCommandProcesor.processCommands(elements);
    bindCommandProcesor.createUntargettedBindings();
    stopwatch.resetAndLog("Binding creation");

    injector.index();
    stopwatch.resetAndLog("Binding indexing");

    requestInjectionCommandProcessor
        = new RequestInjectionElementProcessor(errors, injector.memberInjector);
    requestInjectionCommandProcessor.processCommands(elements);
    stopwatch.resetAndLog("Static injection");
  }

